#!/usr/bin/env node

var argv      = require('minimist')(process.argv.slice(2));
var mongodb   = require('mongodb');
var http      = require('http');
var cp        = require('child_process');
var constants = require('../constants.js');

var MongoClient = mongodb.MongoClient;
var Longjob = require('../longjob.js');

var url = 'mongodb://localhost:27017/test';

var jobs = new Array();

function executeQuery(query) {
  MongoClient.connect(url, function(err, db) {
    if (err) {
      console.log("Can't connect to db: " + err);
    }

    console.log('Connection established to', url);

    db.close();
  });
}

function processJob() {
  exec('cat *.js | wc -l', function (err, stdout, stderr) {
    console.log('stdout: ' + stdout);
    console.log('stderr: ' + stderr);
  });
}

function handleRequest(request) {
  var str = '';
  console.log("Got request...");

  request.on('data', function(chunk) {
    str += chunk;
  });

  request.on('end', function() {
    var cmd = JSON.parse(str);
    switch(cmd.type) {
      case 'job':
        console.log("received job req");
        var lj = new Longjob();
        jobs.push(lj);
        console.log("  started job at: " + lj.getStartTime());
        child = cp.fork(__dirname + '/../sysjob.js');
        child.on('message', function(lj) {
          console.log("child potato");
        });
        child.send(lj);
        break;
      case 'dbjob':
        console.log("received dbjob req");
        break;
      default:
        console.log("did not understand request: " + cmd);
        break;
    }
  });
}

function okReply() {
  return {'ok':'ok'};
}

function errorReply(message) {
  return {'error':message};
}

http.createServer(function(request, response) {
  handleRequest(request);
  response.writeHead(200, {"Content-Type": "text/plain"});
  response.write(JSON.stringify(okReply()));
  response.end();
}).listen(constants.LISTEN_PORT);
